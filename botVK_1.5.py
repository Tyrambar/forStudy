import json
import re
import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.utils import get_random_id
from datetime import datetime as dat

url_id = 'https://vk.com/id'
# Default buttons
to_begin = '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ'
cancel1 = '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å'
see_my_e = '–ú–æ–∏ –∑–∞–ø–∏—Å–∏'
x = ['–ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è']
agree = ['–ü–æ–π–¥—É –Ω–∞ —ç—Ç–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ']
show_org = '–ú–æ–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏'
show_all = '—á–æ –ø–æ —á–µ–º?'

# Default messages from bot
hi_from_bot = ("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è?\n"
"–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ª—é–±–æ–µ –∏–∑ –Ω–∏—Ö –∏ –≤—Å–µ–≥–¥–∞ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–º–µ—é—â–∏–µ—Å—è –∑–∞–ø–∏—Å–∏üôÇ."
"–ê –µ—Å–ª–∏ –ø–ª–∞–Ω—ã –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å–∏\n"
'\n\n–¢–∞–∫–∂–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ—Å–µ—Ç–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ - –æ–Ω–∏ –ø–æ–¥—Å–≤–µ—á–µ–Ω—ã —Å–∏–Ω–∏–º —Ü–≤–µ—Ç–æ–º\n'
"üìå–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∑–Ω–∞—á–æ–∫ –≤ –ø–æ–ª–µ —Å–æ–æ–±—â–µ–Ω–∏–π, —Ä—è–¥–æ–º —Å–æ —Å–º–∞–π–ª–æ–º. "
"–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã.")
choice_e = '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ: –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –¥–∞—Ç—É, –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:\n'
confirm = '–í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ '
wrong = ('üòî –Ø –Ω–µ –º–æ–≥—É –≤–∞—Å –ø–æ–Ω—è—Ç—å\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞:\n'
'üìå –û—Ç–∫—Ä–æ–π—Ç–µ —Ä—è–¥–æ–º —Å–æ —Å–º–∞–π–ª–∏–∫–∞–º–∏ –∫–≤–∞–¥—Ä–∞—Ç–Ω—É—é –∏–∫–æ–Ω–∫—É –¥–ª—è —É–¥–æ–±–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\nüìå –ù–∞–ø–∏—à–∏—Ç–µ –ü—Ä–∏–≤–µ—Ç, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä –∑–∞–Ω–æ–≤–æ')
cancel_all = '–í–∞—à–∞ –∑–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞.'
mes_see = '–ú–æ–∂–µ—Ç–µ —Å–Ω–æ–≤–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—èüí¨, –∫—É–¥–∞ –≤—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å.\n' \
          '–ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ - ' \
          '—Ç–∞–º –±—É–¥–µ—Ç –∫–Ω–æ–ø–∫–∞ "–æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å"\n\n–†–∞–Ω–µ–µ –í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞:\n'
options = '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ, –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ—ç—Ç–∞–ø–Ω–æ :\n' \
          'üìå–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–∞ –∫–Ω–æ–ø–∫–µ - –î–û 40 –°–ò–ú–í–û–õ–û–í\n' \
          'üìå–ê–¥—Ä–µ—Å –º–µ—Å—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è\n' \
          'üìå–û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è - –æ–±—ã—á–Ω—ã–π enter –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∞–±–∑–∞—Ü–µ–≤ –Ω–µ –ø–æ–¥–æ–π–¥–µ—Ç. –ü–∏—à–∏—Ç–µ \\n –∏ –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, —Ç–æ –ø–∏—à–∏—Ç–µ –¥–≤–∞ —Ä–∞–∑–∞: \\n\\n \n' \
          'üìå–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –ø–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—é –°–¢–†–û–ì–û —á–µ—Ä–µ–∑ –ó–ê–ü–Ø–¢–£–Æ\n' \
          'üìå–ù–∞–ø–µ—á–∞—Ç–∞—Ç—å/–Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É - —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –æ—Ç —Ñ—Ä–∞–π–¥–∞—Ç–∞ –∏–ª–∏ –Ω–µ—Ç? (–¥–∞/–Ω–µ—Ç)\n' \
          'üìå–í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä id –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ —ç—Ç–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è\n' \

mes_a_che_tam = '–ù–æ—Ä–º–∞—Å\n–Ω–∞ –¥–≤–∏–∂-—Ç–æ –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –ø–æ–π–¥–µ—à—å?'
welc = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞)\n–≠—Ç–æ –º–æ—è —Ä–∞–±–æ—Ç–∞üòÑ'
e = ["–§–µ—Å—Ç–∏–≤–∞–ª—å 25.05 12—á –º.–ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∞—è", "–ù–∞—Å—Ç–æ–ª–∫–∏ 26.05 18—á –º.–ö–∏—Ç–∞–π-–≥–æ—Ä–æ–¥", "–¢—É—Å–∞ –≤ –¢—É—Ä—Ü–∏–∏ 1-15 –∏—é–ª—è"]
e_adress = ["–ù–∏–∂–Ω—è—è –ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∞—è 35—Å–ö", '–ú–∞—Ä–æ—Å–µ–π–∫–∞ 13—Å1', '–¢—É—Ä—Ü–∏—è']

confirmed = {e[0]: [], e[1]: [95372442, 159542333, 166307242, 382620531, 293320616, 273880438], e[len(e)-1]: []}
events_d = {
e[0]: (
'–ö—É–ª—å—Ç—É—Ä–Ω—ã–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—å —Å —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º–∏ –ª–µ–∫—Ü–∏—è–º–∏ –∏ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞–º–∏ 25 –º–∞—è —Å 12:00 —Ä—è–¥–æ–º —Å –º. –ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∞—è (–∏–ª–∏ –ë–∞—É–º–∞–Ω—Å–∫–∞—è), –ø–æ –∞–¥—Ä–µ—Å—É –ù–∏–∂–Ω—è—è –ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∞—è 35—Å–ö.\n'
'–ú—ã –∂–¥–µ–º –≤—Å–µ—Ö, –∫–æ–º—É –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω –∫–∞–ª–µ–π–¥–æ—Å–∫–æ–ø –∏–∑–º–µ–Ω–µ–Ω–∏–π –†–æ—Å—Å–∏–∏ –∑–∞ –ø—Ä–æ—à–µ–¥—à–∏–µ 40 –ª–µ—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ –∫—É–ª—å—Ç—É—Ä—ã, –∏—Å–∫—É—Å—Å—Ç–≤–∞, '
'–≥–æ—Ä–æ–¥—Å–∫–æ–π —Å—Ä–µ–¥—ã, –º—É–∑—ã–∫–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.\n' '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: –ú–æ—Å–∫–æ–≤—Å–∫–∏–π –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫—É–ª—å—Ç—É—Ä–Ω—ã–π —Ü–µ–Ω—Ç—Ä, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ "–ö—É–ª—å—Ç—É—Ä–∞ –≤ –≥–æ—Ä–æ–¥–µ".\n\n'
'üòØ–í–ø–µ—Ä–≤—ã–µ –Ω–∞ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ø–ª–æ—â–∞–¥–∫–µ –ú–æ—Å–∫–≤—ã ‚Äî —Ç–≤–æ—Ä—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–æ—Å–º—ã—Å–ª–µ–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ ¬´–ø–æ—Ä—Ç–∞–ª—ã¬ª '
'–≤ –ø—Ä–æ—à–ª–æ–µ, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã, –ª–µ–∫—Ü–∏–∏ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã –≤ –æ–±–ª–∞—Å—Ç–∏ –∏—Å–∫—É—Å—Å—Ç–≤–∞, —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ –∫—É–ª—å—Ç—É—Ä—ã, –∞ —Ç–∞–∫–∂–µ –≤–æ–ª—à–µ–±–Ω—ã–π '
'–º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –∫–≤–∞—Ä—Ç–∏—Ä–Ω–∏–∫ –æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ "–í—Å–µ —Å–≤–æ–∏": —ç—Ç–æ —Å—Ç–µ–Ω–¥-–∞–ø, –º—É–∑—ã–∫–∞–ª—å–Ω–æ–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –∫–∞—Ä–∞–æ–∫–µ –ø–æ–¥ –≥–∏—Ç–∞—Ä—É.\n'
'–ë—É–¥–µ—Ç –≤–µ—Å–µ–ª–æ   –∏ –ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–æüë®üéì, –≤—Å–µ –∫–∞–∫ –º—ã –ª—é–±–∏–º: —Å –∏–≥—Ä–æ–≤—ã–º–∏ —Ä–µ—Ç—Ä–æ-–∞–≤—Ç–æ–º–∞—Ç–∞–º–∏, –ø–∏–Ω–≥-–ø–æ–Ω–≥–æ–º, –º–µ—Ö–µ–Ω–¥–∏ –∏ –∞–Ω—Ç—É—Ä–∞–∂–Ω—ã–º–∏ –¥–µ–∫–æ—Ä–∞—Ü–∏—è–º–∏.\n\n'
'–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è:\n'
'üìå–õ–µ–∫—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫:\n'
'12:30-14:00 ‚Äì ¬´–ò —Ç–æ–≥–¥–∞ –æ–±–∏–¥–µ–ª–æ—Å—å –≤—Ä–µ–º—è‚Ä¶: –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —ç–ø–æ—Ö–∏ –ó–∞—Å—Ç–æ—è¬ª. –õ–µ–∫—Ü–∏—è –ò—Ä–∏–Ω—ã –ì–ª—É—â–µ–Ω–∫–æ (–ù–ò–£ –í–®–≠)\n'
'14:30-16:30 ‚Äì ¬´–ó–∞ —Å—Ç–æ–ª–æ–º¬ª: –æ–±—Å—É–∂–¥–µ–Ω–∏–µ 2010-—Ö –≤ –†–æ—Å—Å–∏–∏, —ç–∫–æ–ª–æ–≥–∏–∏, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏ —Ñ–µ–º–∏–Ω–∏–∑–º–∞\n'
'16:30-17:30 ‚Äì ¬´–ü–æ–ø-–º—É–∑—ã–∫–∞ 3019 –≥–æ–¥–∞ –∏–ª–∏ –ü–æ—á–µ–º—É –ø–æ–ø-–º—É–∑—ã–∫–∞ ‚Äî —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞–≤–∞–Ω–≥–∞—Ä–¥¬ª. –õ–µ–∫—Ü–∏—è –ì—Ä–∏—à–∏ –ü—Ä–æ—Ä–æ–∫–æ–≤–∞ (–∫–∞–Ω–∞–ª Blitz and Chips)\n\n'
'üìå–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã:\n'
'12:00 ‚Äî 13:00 –£—Ç—Ä–µ–Ω–Ω—è—è –π–æ–≥–∞ –æ—Ç —Å—Ç—É–¥–∏–∏ Zaryad\n'
'13:30 ‚Äî 14:30 Sekta: —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –≤ —Å—Ç–∏–ª–µ 90-—Ö\n'
'13:00 ‚Äî 14:00 –ö—É–ª–∏–Ω–∞—Ä–Ω—ã–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–π –∫—É—Ö–Ω–∏ –æ—Ç FOOD TASTY cafe\n'
'14:30 ‚Äî 16:40 –¢—É—Ä–Ω–∏—Ä –ø–æ –ø–∏–Ω–≥-–ø–æ–Ω–≥—É Ping Tablet\n'
'14:00 ‚Äî 18:00 –ú–µ—Ö–µ–Ω–¥–∏ –¥–ª—è –≤—Å–µ—Ö –∂–µ–ª–∞—é—â–∏—Ö\n'
'15:00 ‚Äî 16:00 Mynameisspace: –ª–µ–∫—Ü–∏—è ‚Äî –ø–µ—Ä—Ñ–æ—Ä–º–∞–Ω—Å ¬´–ù–∞—Ñ—Ç–∞–ª–∏–Ω –∏–ª–∏ –∑–∞—á–µ–º –Ω–∞–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ¬ª\n'
'15:00 ‚Äî 16:00 MAGIC LAB: —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å "–¶–µ–Ω—Ç—Ä–æ–±–µ–∂–Ω–æ–µ —Ä–∏—Å–æ–≤–∞–Ω–∏–µ"\n'
'18:00 ‚Äî 21:00 –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –∫–≤–∞—Ä—Ç–∏—Ä–Ω–∏–∫ –í–°–ï –°–í–û–ò\n'
),
e[1]: ("–ù–∞—Å—Ç–æ–ª–∫–∏ 26 –º–∞—è –≤ 18:00 –≤ Jeffrey's Coffee –Ω–∞ –ú–∞—Ä–æ—Å–µ–π–∫–µ 13—Å1, –º. –ö–∏—Ç–∞–π-–≥–æ—Ä–æ–¥.\n\n"
'–•–µ–π, —Å–∫—É—á–∞–ª –ø–æ –Ω–∞—à–∏–º –Ω–∞—Å—Ç–æ–ª–∫–∞–º?\n\n'
"–ü—Ä–∏—Ö–æ–¥–∏ –≤ –∞–Ω—Ç–∏–∫–∞—Ñ–µ Jeffrey's Coffee –Ω–∞ –ú–∞—Ä–æ—Å–µ–π–∫–µ –∏ —Å—Ä–∞–∑–∏—Å—å —Å –ª—É—á—à–∏–º–∏ –∏–∑ –ª—É—á—à–∏—Ö!\n"
'–ù–µ —É–≤–µ—Ä–µ–Ω –≤ —Å–≤–æ–∏—Ö —Å–∏–ª–∞—Ö? –ù–µ –∑–Ω–∞–µ—à—å –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã? –ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ! –ù–∞—à–∏ –æ—á–∞—Ä–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –≤–µ–¥—É—â–∏–µ –≤—Å–µ–º—É –Ω–∞—É—á–∞—Ç –∏ –æ–±–æ –≤—Å–µ–º —Ä–∞—Å—Å–∫–∞–∂—É—Ç.\n'
'–°—á–∏—Ç–∞–µ—à—å —Å–µ–±—è —ç–∫—Å–ø–µ—Ä—Ç–æ–º? –ü—Ä–∏—Ö–æ–¥–∏ –∏ –¥–æ–∫–∞–∂–∏!\n'
'–ü—Ä–æ—Å—Ç–æ —Ö–æ—á–µ—à—å —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è? –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—à–µ–π –¥—Ä—É–∂–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –ø—Ä–æ–≤–µ–¥–∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–π—Å—è –≤–µ—á–µ—Ä.\n'),
e[len(e)-1]: ("–õ–µ—Ç–æ–º, —Å 1 –ø–æ 15 –∏—é–ª—è —Å–æ—Å—Ç–æ–∏—Ç—Å—è Sea || Summer || Students - –±–æ–ª—å—à–∞—è –ª–µ—Ç–Ω—è—è —Ç—É—Å–æ–≤–∫–∞ –Ω–∞ –º–æ—Ä–µ –¥–ª—è –º–æ–ª–æ–¥–µ–∂–∏.\n"
"–ë–æ–ª–µ–µ 100 —á–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –Ω–∞ —é–∂–Ω—ã–π –±–µ—Ä–µ–≥ –¢—É—Ä—Ü–∏–∏. –£–∂–µ –≤—Ç–æ—Ä–æ–π –ø–æ —Å—á–µ—Ç—É –≤—ã–µ–∑–¥ —Å—Ç–∞–Ω–µ—Ç –µ—â–µ –º–∞—Å—à—Ç–∞–±–Ω–µ–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ!\n"
"–ë–∞—Ä—ã, –¥–∏—Å–∫–æ—Ç–µ–∫–∏, —ç–∫—Å–∫—É—Ä—Å–∏–∏ –∏ –∫–≤–µ—Å—Ç—ã - –Ω–∞–º –±—É–¥–µ—Ç —á–µ–º –∑–∞–Ω—è—Ç—å—Å—è! "
"–ê —Ç–µ–ø–ª–æ–µ –°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–µ –º–æ—Ä–µ —Å–æ–∑–¥–∞—Å—Ç –ª—É—á—à—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –¥–ª—è –±–æ–ª—å—à–æ–≥–æ –º–æ–ª–æ–¥–µ–∂–Ω–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞)")
}
# Words for reading from keyboard
e_anss = (
(e[0], ['25.05', '25.5', '25 –º–∞—è', '—Ñ–µ—Å—Ç–∏–≤–∞–ª—å', '–∫—É–ª—å—Ç—É—Ä–Ω—ã–π', '–∫—É–ª—å—Ç—É—Ä–Ω—ã–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—å', '–≤—Å']),
(e[1], ['26.05', '26.5', '26 –º–∞—è', '–Ω–∞—Å—Ç–æ–ª–∫–∏', '–Ω–∞—Å—Ç–æ–ª–æ—á–∫–∏', '–≤—Å']),
(e[len(e)-1], ['01.07', '15.07', '01.07-15.07', '1-15 –∏—é–ª—è', '1.7', '1 –∏—é–ª—è', '–∏—é–ª—å',
               "—Ç—É—Å–∞ –Ω–∞ –º–æ—Ä–µ", "–º–æ—Ä–µ", "—Ç—É—Ä—Ü–∏—è"])
)


def e_anss_all_f():
    lst = []
    for i in e_anss:
        lst.extend(i[1])
    return lst
e_anss_all = e_anss_all_f()

def e_a_numb(m):
    return [f'{m}', f'{m}.', f'{m}-–æ–µ']

e_anss_numb_e = []
for n in range(len(e)):
    e_anss_numb_e.extend(e_a_numb(n+1))

def e_anss_del(e_anss_f):
    if args_ind[event.user_id]['pp']:
        for o in seen_all:
            for k in range(args_ind[event.user_id]['pp']):
                for j in e_a_numb(k + 1):
                    if j in e_anss_f[o][1]:
                        e_anss_f[o][1].remove(j)
    elif args_ind[event.user_id]['seen_xx']:
        for k in range(len(e_types[some_x])):
            for m in e_anss_f:
                if e_types[some_x][k] == m[0]:
                    for j in e_a_numb(k + 1):
                        if j in m[1]:
                            e_anss_f[e_anss_f.index(m)][1].remove(j)
    else:
        for o in range(len(e)):
            for j in e_a_numb(o + 1):
                if j in e_anss_f[o][1]:
                    e_anss_f[o][1].remove(j)
    return e_anss_f
## Function for

ok = r'(–∑–∞–ø–∏—Å–∞—Ç—å—Å—è)|(—Ö[–æ—á—É–∞—Ç—é]{3})|(–¥[–∞–æ]–≤–∞–π)|(–ø[–∞–æ]–π[–¥—É–µ—ë–º—Ç–∏])|(–ø[–∞–æ]?—à–ª–∏)|(–¥–∞+)|((–≥–æ)+—É*)|(–∏–¥[—ë–µ–º–¥—É])|(–∫[–∞–æ]–Ω–µ[—á—à]–Ω[–∞–æ]*)|(–æ–∫[–µ–π–∏]*)'
nearest = r'(–±–ª–∏–∑?–∂–∞–π—à[–∏–µ]–µ!*)|([–ø–æ—Å–ª–µ]*–∑–∞–≤—Ç—Ä[–∞–æ])|([–≤ ]*–≤—ã—Ö–æ–¥–Ω[—ã–µ–æ–π]*)'
begin = r'(–º–µ–Ω—é)|(—Å—Ç–∞—Ä—Ç[—É–π]*)|(–ø—Ä–∏–≤[–µ—Ç—Å—Ç–≤—É—é]*)|(–¥–æ–±—Ä[–æ–≥–æ—ã–π–µ]+( )?[—É—Ç—Ä–æ–∞–æ–¥–Ω—è–¥–µ–Ω—å–≤–µ—á–µ—Ä–∞]*)|' \
        r'([–≤—Å]* ?–Ω–∞—á[–Ω–∏–∞–ª–æ–∞—Ç—å]*)|([–∑–¥–∞–æ]*—Ä[–∞–æ–≤–∞—Å—Ç–≤—É–π—Ç–µ]*)|(—Ö–∞–π)|(hi)|(hello)|(–∫—É)'
a_che_tam = r'([–∞ ]*—á[–µ—ë–æ]{1} —Ç–∞–º\??)|(–∫–∞–∫ [—Ç—ã–¥–µ–ª–∞]\??)'
welcom = r'(—Å?–ø–∞—Å[–∏–µ]–±[–∞–æ]*)|(–±–ª–∞–≥–æ–¥–∞—Ä—é?[—Å—Ç–≤—É—é]*[–∏–º]*)|(–Ω–æ?—Ä–º[–∞—Å]*)|(–∫ ?—Ä ?–∞ ?—Å ?[–∏–∞]? ?–≤ ?[–∞–æ]?[—á–∏–∫]*)'


# Supporting functions
def butt(dct, size, c, color, label1, label2 = None, color2 = None):
    if size == 1:
        if label1 == e[len(e)-1]:
            color = 'default'
        if label1 == e[0]:
            color = 'primary'
        dct['buttons'].append([{
            "action": {
            "type": "text",
            "payload": '{"button": "%d"}' % (c),
            "label": label1
            },
            "color": color
        }])
    elif size == 2:
        dct['buttons'].append([{
            "action": {
            "type": "text",
            "payload": '{"button": "%d"}' % c,
            "label": label1},
            "color": color},
            {"action": {
            "type": "text",
            "payload": '{"button": "%d"}' % (c + 1),
            "label": label2},
            "color": color2
            }])

    return dct

def keyb1(lst=None, y=None, conf=None, id=None, canc=None):
    keyb = {"one_time": None, "buttons": []}
    c=1
    seen = False
    if canc:
        for i in conf:
            if id in conf[i]:
                butt(keyb, 1, c, "positive", i)

        butt(keyb, 1, c, "primary", to_begin)

    else:
        if lst:
            if lst == x:
                butt(keyb, 1, c, "positive", x[0])
            else:
                for i in lst:
                    butt(keyb, 1, c, "positive", str(i))

        if id == None and conf == None and y != 0:
            butt(keyb, 1, c, "primary", to_begin)

        elif id != None and conf != None:
            for i in conf:
                if id in conf[i]:
                    if y == 0:
                        butt(keyb, 1, c, "primary", see_my_e)
                    else:
                        butt(keyb, 2, c, "primary", to_begin, see_my_e, "positive")
                        if y == 2:
                            butt(keyb, 1, c, "default", cancel1)
                    seen = True

                    break
            if seen == False and y != 0:
                butt(keyb, 1, c, "primary", to_begin)

    if id in admins:
        butt(keyb, 1, c, "negative", show_all)
    elif id in orgs:
        butt(keyb, 1, c, "negative", show_org)

    return keyb

def m_send(user, message, keyboard = None):
    return vk.messages.send(user_id = user, message = message, keyboard = keyboard, random_id = get_random_id())

# Main with data
token = ''
admins = [43132896, 293320616, 291093703, 95372442]
orgs = {98384985: [e[0]]}
vk_session = vk_api.VkApi(token=token)
longpoll = VkLongPoll(vk_session)
vk = vk_session.get_api()

# Supporting arguments for order of actions of bot
def clear_go_e():
    go_e = []
    for i in e:
        go_e.append(False)
    return go_e
go_e = clear_go_e()

def args_ind_add(argss_ind, ind_id, pp, deep, seen_xx):
    argss_ind[ind_id] = {'pp': pp, 'deep': deep, 'seen_xx': seen_xx}
    return argss_ind


# Helpings args
password = '–ø—Ä–∞–æ—Ç—Ü—ã'
args_ind = {}
previous = ''
# –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ/–æ—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏ - 0; –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ - 1; —Å–ø–∏—Å–æ–∫ - 2; –º–æ–∏ –∑–∞–ø–∏—Å–∏ - 3; –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ - 4
for event in longpoll.listen():
    try:
        if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:
            current = event.text
            if event.user_id not in args_ind:
                args_ind = args_ind_add(args_ind, event.user_id, 0, 0, 0)
            print(args_ind[event.user_id]['deep'])
            if re.match(begin, current.lower()) or current == to_begin:
                args_ind[event.user_id]['deep'] = 0
            if current.lower() == password and event.user_id in admins:
                m_send(event.user_id, cancel_all, json.dumps(keyb1(None, 1, None, None), ensure_ascii=False))

            if current == show_all and event.user_id in admins:
                text = ''
                for i in range(len(e)):
                    text += f"–ù–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ '{e[i]}' –∏–¥—É—Ç: {url_id}{f', {url_id}'.join([str(j) for j in confirmed[e[i]]])}\n"
                m_send(event.user_id, text)
                text = ''
            elif current == show_org and event.user_id in orgs:
                text = ''
                if confirmed[orgs[event.user_id][0]] == []:
                    text+='–ü–æ–∫–∞ –∑–∞–ø–∏—Å–µ–π –Ω–µ—Ç\n'
                else:
                    for i in orgs[event.user_id]:
                        text += f"–ù–∞ —Ç–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ '{i}' –∏–¥—É—Ç: " \
                           f"{url_id}{f', {url_id}'.join([str(j) for j in confirmed[i]])}\n"
                m_send(event.user_id, text)
                e_anss = e_anss_del(e_anss)
                text = ''
            elif '–∑–∞–ø–∏—Å–∏' in current.lower() or current == see_my_e:
                args_ind[event.user_id]['deep'] = 3
                see_my = mes_see
                pp = 0
                seen_all = []
                for n, i in enumerate(confirmed):
                    if event.user_id in confirmed[i]:
                        see_my += f'{n}. {i} –ø–æ –∞–¥—Ä–µ—Å—É {e_adress[e.index(i)]}\n'
                        if e_a_numb(pp+1)[0] not in e_anss[n][1]:
                            e_anss[n][1].extend(e_a_numb(pp+1))
                            e_anss_all.extend(e_a_numb(pp+1))
                            seen_all.append(n)
                        pp+=1
                args_ind[event.user_id]['pp'] = pp
                m_send(event.user_id, see_my, json.dumps(keyb1(None, None, confirmed, event.user_id, 1),
                                                          ensure_ascii=False))
                see_my = ''
            elif re.match(a_che_tam, current.lower()):
                m_send(event.user_id, mes_a_che_tam)
            # –í–æ–∑–≤—Ä–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–µ–≤–µ—Ä–Ω–æ–º –≤–≤–æ–¥–µ, –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫
            elif re.match(welcom, current.lower()):
                m_send(event.user_id, welc)
            # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
            elif args_ind[event.user_id]['deep'] == 0 and current.lower() not in e_anss_all and current.lower() not in e_anss_numb_e:
                print('suka')
                args_ind[event.user_id]['deep'] = 1
                m_send(event.user_id, hi_from_bot, json.dumps(keyb1(x, 0, confirmed, event.user_id),
                                                              ensure_ascii = False))
                # –ü—Ä–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–∏ –æ–±–Ω—É–ª—è–µ—Ç—Å—è –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É—é—â–∏–π –≤—ã–±–æ—Ä –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
                go_e = clear_go_e()
                e_anss = e_anss_del(e_anss)
                e_anss_all = e_anss_all_f()
                args_ind[event.user_id]['seen_xx'] = 0
            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥—Ä—è–¥—É—â–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
            elif args_ind[event.user_id]['deep'] == 1 and current.lower() not in e_anss_all and current.lower() not in e_anss_numb_e:
                text = choice_e
                args_ind[event.user_id]['pp'] = 0
                args_ind[event.user_id]['deep'] = 2
                for k, i in enumerate(e):
                    text += f"{k+1}. {i}\n"
                m_send(event.user_id, text, json.dumps(keyb1(e, 1, confirmed, event.user_id),
                                                       ensure_ascii=False))
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
                for n in range(len(e)):
                    if e_a_numb(n+1)[0] not in e_anss[n][1]:
                        e_anss[n][1].extend(e_a_numb(n+1))
                        e_anss_all.extend(e_a_numb(n+1))
                text = ''
            # –û–ø–∏—Å–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –≤–æ–∑–≤—Ä–∞—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
            elif (args_ind[event.user_id]['deep'] in (2, 3) and current in e) or current.lower() in e_anss_all:
                args_ind[event.user_id]['deep'] = 4
                for n, i in enumerate(e):
                    if current.lower() in e_anss[n][1] or current == i:
                        if event.user_id in confirmed[e[n]]:
                            m_send(event.user_id, events_d[i], json.dumps(keyb1(None, 2, confirmed, event.user_id),
                                              ensure_ascii=False))
                        else:
                            m_send(event.user_id, events_d[i], json.dumps(keyb1(agree, 1, confirmed, event.user_id),
                                                                      ensure_ascii=False))
                        go_e[n] = True
                        numb = n
                        e_anss = e_anss_del(e_anss)
                        break
                e_anss_all = e_anss_all_f()
            elif args_ind[event.user_id]['deep'] == 4:
                # –û—Ç–º–µ–Ω–∞ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if current == cancel1 or '–æ—Ç–º–µ–Ω' in current.lower() or ((previous == see_my_e or '–∑–∞–ø–∏—Å–∏' in previous.lower()) and \
                    current.lower() in e_anss_all):
                    m_send(event.user_id, cancel_all, json.dumps(keyb1(None, 1, None, None), ensure_ascii=False))
                    if current != cancel1 and '–æ—Ç–º–µ–Ω' not in current.lower():
                        for i in e_anss:
                            if current.lower() in i[1]:
                                if event.user_id in confirmed[i[0]]:
                                    confirmed[i[0]].remove(event.user_id)
                                break
                    else:
                        if event.user_id in confirmed[e[numb]]:
                            confirmed[e[numb]].remove(event.user_id)
                    e_anss = e_anss_del(e_anss)
                    e_anss_all = e_anss_all_f()
                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ, –æ–±–Ω—É–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–≤—à–µ–π –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
                elif True in go_e and (previous in e or re.match(ok, current.lower())):
                    m_send(event.user_id, f'{confirm}{e[n]}', json.dumps(keyb1(None, 1, confirmed, event.user_id),
                                                                  ensure_ascii=False))
                    go_e[numb] = False
                    # –ó–∞–ø–∏—Å—å —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ, –æ—Ç—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞–º, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ –ø–æ—Å–µ—Ç–∏—Ç –¥–∞–Ω–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
                    confirmed[e[numb]].append(event.user_id)
                    e_anss = e_anss_del(e_anss)
                    e_anss_all = e_anss_all_f()
                else:
                    m_send(event.user_id, wrong)
            # –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å–≤–æ–∏—Ö –∑–∞–ø–∏—Å–µ–π —Å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã–º –∞–¥—Ä–µ—Å–æ–º
            else:
                m_send(event.user_id, wrong)
            previous = current
    except (IndexError, KeyError):
        m_send(event.user_id, wrong)